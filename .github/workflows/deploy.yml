name: Node.js CD

# Controls when the action will run.
on:
  push:
    branches:
      - master
      - EV-11-Gerenciador-criar-ambiente-de-dev

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}
      API_URL: ${{ secrets.API_URL_PROD }}
      SECRET: ${{ secrets.SECRET }}
      ACCESS_TOKEN_MERCADOPAGO: ${{ secrets.ACCESS_TOKEN_MERCADOPAGO_PROD }}
      GERENCIADOR_URL: ${{ secrets.GERENCIADOR_URL_PROD }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL_PROD }}
      TARGET: ${{ secrets.TARGET_PROD }}
      PORT: ${{ secrets.PORT_PROD }}

    steps:
    - uses: actions/checkout@v2

    # Set environment variables based on the branch
    - name: Set secrets for the environment
      if: github.ref == 'refs/heads/EV-11-Gerenciador-criar-ambiente-de-dev'
      run: |
        echo "Using development secrets"
        echo "DATABASE_URL=${{ secrets.DATABASE_URL_DEV }}" >> $GITHUB_ENV
        echo "API_URL=${{ secrets.API_URL_DEV }}" >> $GITHUB_ENV
        echo "SECRET=${{ secrets.SECRET }}" >> $GITHUB_ENV
        echo "ACCESS_TOKEN_MERCADOPAGO=${{ secrets.ACCESS_TOKEN_MERCADOPAGO_DEV }}" >> $GITHUB_ENV
        echo "GERENCIADOR_URL=${{ secrets.GERENCIADOR_URL_DEV }}" >> $GITHUB_ENV
        echo "FRONTEND_URL=${{ secrets.FRONTEND_URL_DEV }}" >> $GITHUB_ENV
        echo "TARGET=${{ secrets.TARGET_DEV }}" >> $GITHUB_ENV
        echo "PORT=${{ secrets.PORT_DEV }}" >> $GITHUB_ENV

    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20.x

    - run: npm i

    - name: Set up environment variables
      run: |
        cat <<EOT > .env
        DATABASE_URL=${{ env.DATABASE_URL }}
        API_URL=${{ env.API_URL }}
        SECRET=${{ env.SECRET }}
        ACCESS_TOKEN_MERCADOPAGO=${{ env.ACCESS_TOKEN_MERCADOPAGO }}
        GERENCIADOR_URL=${{ env.GERENCIADOR_URL }}
        FRONTEND_URL=${{ env.FRONTEND_URL }}
        EOT

    - run: npx prisma generate

    - run: npm run build --if-present

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete --quiet"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.HOST }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ env.TARGET }}
          SCRIPT_AFTER: |
            echo "dentro do vps"
            pwd
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            nvm use 20
            npx prisma migrate deploy
            pm2 restart all
